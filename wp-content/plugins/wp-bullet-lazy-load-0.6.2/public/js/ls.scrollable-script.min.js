var WPB_LL_sources = [],
  WPB_LL_pendingSources = [];
(window.WPB_LL_sourcesCloned = []),
  (function (e, t) {
    var n = function () {
      t(e.lazySizes), e.removeEventListener("lazyunveilread", n, !0);
    };
    (t = t.bind(null, e, e.document)),
      "object" == typeof module && module.exports
        ? t(require("lazysizes"))
        : e.lazySizes
        ? n()
        : e.addEventListener("lazyunveilread", n, !0);
  })(window, function (e, t, n) {
    "use strict";
    function r() {
      e.removeEventListener("scroll", r, !1),
        e.removeEventListener("click", r, !1);
      for (let e = 0; e < WPB_LL_sources.length; e++) {
        let t = WPB_LL_sources[e].dataset,
          n = t.source;
        if (!n) continue;
        s(
          "style" === t.type
            ? o(WPB_LL_sources[e])
            : l(n, WPB_LL_sources[e], e),
          t
        );
      }
      WPB_LL_sources = [];
    }
    function s(e, n) {
      let r = t.getElementsByTagName("script")[0];
      n.delay
        ? setTimeout(() => {
            r.parentNode.insertBefore(e, r);
          }, parseInt(n.delay))
        : r.parentNode.insertBefore(e, r);
    }
    function o(e) {
      let n = t.createElement("link");
      return (n.rel = "stylesheet"), (n.href = e.source), n;
    }
    function l(n, r, s) {
      let o = t.createElement("script");
      const l = "link" === n ? "src" : "innerHTML";
      if (
        ((o[l] = r.source),
        "link" === n &&
          (o.onload = () => {
            !(function () {
              let n = WPB_LL_pendingSources;
              for (let r = 0; r < n.length; r++) {
                let s = t.createElement("script"),
                  o = t.getElementsByTagName("script")[0];
                let l =
                  e.WPB_LL_sourcesCloned[parseInt(n[r].sourceIndex)].source;
                l && ((s.innerHTML = l), o.parentNode.insertBefore(s, o));
              }
              WPB_LL_pendingSources = [];
            })();
          }),
        "anonymous" === n)
      ) {
        let e = "try {";
        (e += r.source),
          (e +=
            '} catch (e) { WPB_LL_pendingSources.push( { sourceIndex: "' +
            s +
            '" } ) }'),
          (o[l] = e);
      }
      return o;
    }
    t.addEventListener &&
      addEventListener(
        "lazybeforeunveil",
        function (t) {
          if (t.detail.instance !== n) return;
          if (t.defaultPrevented) return;
          let s = t.target;
          const o = s.getAttribute("data-scrollable-script");
          if (!o) return;
          const l = { source: o, dataset: s.dataset };
          WPB_LL_sources.push(l),
            e.WPB_LL_sourcesCloned.push(l),
            s.dataset.scrollable && "false" === s.dataset.scrollable
              ? r()
              : (e.addEventListener("scroll", r, !1),
                e.addEventListener("click", r, !1));
        },
        !1
      );
  });
